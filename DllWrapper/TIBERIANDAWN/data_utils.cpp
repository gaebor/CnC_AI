#include "data_utils.hpp"

const std::unordered_map<std::string, int> static_tile_names = {
{"", 0},
{"B1", 1},
{"B2", 2},
{"B3", 3},
{"B4", 4},
{"B5", 5},
{"B6", 6},
{"BIB1", 7},
{"BIB2", 8},
{"BIB3", 9},
{"BR1", 10},
{"BR2", 11},
{"BR3", 12},
{"BR4", 13},
{"BR6", 14},
{"BR7", 15},
{"BR8", 16},
{"BR9", 17},
{"BRIDGE1", 18},
{"BRIDGE1D", 19},
{"BRIDGE2", 20},
{"BRIDGE2D", 21},
{"BRIDGE3", 22},
{"BRIDGE3D", 23},
{"BRIDGE4", 24},
{"BRIDGE4D", 25},
{"CLEAR1", 26},
{"CR1", 27},
{"CR2", 28},
{"CR3", 29},
{"CR4", 30},
{"CR5", 31},
{"CR6", 32},
{"D01", 33},
{"D02", 34},
{"D03", 35},
{"D04", 36},
{"D05", 37},
{"D06", 38},
{"D07", 39},
{"D08", 40},
{"D09", 41},
{"D10", 42},
{"D11", 43},
{"D12", 44},
{"D13", 45},
{"D14", 46},
{"D15", 47},
{"D16", 48},
{"D17", 49},
{"D18", 50},
{"D19", 51},
{"D20", 52},
{"D21", 53},
{"D22", 54},
{"D23", 55},
{"D24", 56},
{"D25", 57},
{"D26", 58},
{"D27", 59},
{"D28", 60},
{"D29", 61},
{"D30", 62},
{"D31", 63},
{"D32", 64},
{"D33", 65},
{"D34", 66},
{"D35", 67},
{"D36", 68},
{"D37", 69},
{"D38", 70},
{"D39", 71},
{"D40", 72},
{"D41", 73},
{"D42", 74},
{"D43", 75},
{"FALL1", 76},
{"FALL2", 77},
{"FALLS1", 78},
{"FALLS2", 79},
{"FORD1", 80},
{"FORD2", 81},
{"P01", 82},
{"P02", 83},
{"P03", 84},
{"P04", 85},
{"P05", 86},
{"P06", 87},
{"P07", 88},
{"P08", 89},
{"P13", 90},
{"P14", 91},
{"P15", 92},
{"P16", 93},
{"P17", 94},
{"P18", 95},
{"P19", 96},
{"P20", 97},
{"RV01", 98},
{"RV02", 99},
{"RV03", 100},
{"RV04", 101},
{"RV05", 102},
{"RV06", 103},
{"RV07", 104},
{"RV08", 105},
{"RV09", 106},
{"RV10", 107},
{"RV11", 108},
{"RV12", 109},
{"RV13", 110},
{"RV14", 111},
{"RV15", 112},
{"RV16", 113},
{"RV17", 114},
{"RV18", 115},
{"RV19", 116},
{"RV20", 117},
{"RV21", 118},
{"RV22", 119},
{"RV23", 120},
{"RV24", 121},
{"RV25", 122},
{"S01", 123},
{"S02", 124},
{"S03", 125},
{"S04", 126},
{"S05", 127},
{"S06", 128},
{"S07", 129},
{"S08", 130},
{"S09", 131},
{"S10", 132},
{"S11", 133},
{"S12", 134},
{"S13", 135},
{"S14", 136},
{"S15", 137},
{"S16", 138},
{"S17", 139},
{"S18", 140},
{"S19", 141},
{"S20", 142},
{"S21", 143},
{"S22", 144},
{"S23", 145},
{"S24", 146},
{"S25", 147},
{"S26", 148},
{"S27", 149},
{"S28", 150},
{"S29", 151},
{"S30", 152},
{"S31", 153},
{"S32", 154},
{"S33", 155},
{"S34", 156},
{"S35", 157},
{"S36", 158},
{"S37", 159},
{"S38", 160},
{"SC1", 161},
{"SC2", 162},
{"SC3", 163},
{"SC4", 164},
{"SC5", 165},
{"SC6", 166},
{"SH1", 167},
{"SH10", 168},
{"SH11", 169},
{"SH12", 170},
{"SH13", 171},
{"SH14", 172},
{"SH15", 173},
{"SH16", 174},
{"SH17", 175},
{"SH18", 176},
{"SH19", 177},
{"SH2", 178},
{"SH20", 179},
{"SH21", 180},
{"SH22", 181},
{"SH23", 182},
{"SH24", 183},
{"SH25", 184},
{"SH26", 185},
{"SH27", 186},
{"SH28", 187},
{"SH29", 188},
{"SH3", 189},
{"SH30", 190},
{"SH31", 191},
{"SH32", 192},
{"SH33", 193},
{"SH34", 194},
{"SH35", 195},
{"SH36", 196},
{"SH37", 197},
{"SH38", 198},
{"SH39", 199},
{"SH4", 200},
{"SH40", 201},
{"SH41", 202},
{"SH42", 203},
{"SH43", 204},
{"SH44", 205},
{"SH45", 206},
{"SH46", 207},
{"SH47", 208},
{"SH48", 209},
{"SH49", 210},
{"SH5", 211},
{"SH50", 212},
{"SH51", 213},
{"SH52", 214},
{"SH53", 215},
{"SH54", 216},
{"SH55", 217},
{"SH56", 218},
{"SH57", 219},
{"SH58", 220},
{"SH59", 221},
{"SH6", 222},
{"SH60", 223},
{"SH61", 224},
{"SH62", 225},
{"SH63", 226},
{"SH7", 227},
{"SH8", 228},
{"SH9", 229},
{"SR1", 230},
{"SR2", 231},
{"TI1", 232},
{"TI10", 233},
{"TI11", 234},
{"TI12", 235},
{"TI2", 236},
{"TI3", 237},
{"TI4", 238},
{"TI5", 239},
{"TI6", 240},
{"TI7", 241},
{"TI8", 242},
{"TI9", 243},
{"V12", 244},
{"V13", 245},
{"V14", 246},
{"V15", 247},
{"V16", 248},
{"V17", 249},
{"V18", 250},
{"W1", 251},
{"W2", 252}
};

const std::unordered_map<std::string, int> dynamic_object_names = {
{"", 0},
{"A10", 1},
{"AFLD", 2},
{"AFLDMAKE", 3},
{"APC", 4},
{"ARCO", 5},
{"ARTY", 6},
{"ATWR", 7},
{"ATWRMAKE", 8},
{"BARB", 9},
{"BARL", 10},
{"BGGY", 11},
{"BIKE", 12},
{"BIO", 13},
{"BIOMAKE", 14},
{"BOAT", 15},
{"BRIK", 16},
{"C1", 17},
{"C10", 18},
{"C17", 19},
{"C2", 20},
{"C3", 21},
{"C4", 22},
{"C5", 23},
{"C6", 24},
{"C7", 25},
{"C8", 26},
{"C9", 27},
{"CHAN", 28},
{"CYCL", 29},
{"DELPHI", 30},
{"E1", 31},
{"E2", 32},
{"E3", 33},
{"E4", 34},
{"E5", 35},
{"E6", 36},
{"EYE", 37},
{"EYEMAKE", 38},
{"FACT", 39},
{"FACTMAKE", 40},
{"FIX", 41},
{"FIXMAKE", 42},
{"FTNK", 43},
{"GTWR", 44},
{"GTWRMAKE", 45},
{"GUN", 46},
{"GUNMAKE", 47},
{"HAND", 48},
{"HANDMAKE", 49},
{"HARV", 50},
{"HELI", 51},
{"HOSP", 52},
{"HOSPMAKE", 53},
{"HPAD", 54},
{"HPADMAKE", 55},
{"HQ", 56},
{"HQMAKE", 57},
{"HTNK", 58},
{"JEEP", 59},
{"LST", 60},
{"LTNK", 61},
{"MCV", 62},
{"MHQ", 63},
{"MISS", 64},
{"MLRS", 65},
{"MOEBIUS", 66},
{"MSAM", 67},
{"MTNK", 68},
{"NUK2", 69},
{"NUK2MAKE", 70},
{"NUKE", 71},
{"NUKEMAKE", 72},
{"OBLI", 73},
{"OBLIMAKE", 74},
{"ORCA", 75},
{"PBOX", 76},
{"PBOXMAKE", 77},
{"PROC", 78},
{"PROCMAKE", 79},
{"PYLE", 80},
{"PYLEMAKE", 81},
{"RAPT", 82},
{"RMBO", 83},
{"ROCK1", 84},
{"ROCK2", 85},
{"ROCK3", 86},
{"ROCK4", 87},
{"ROCK5", 88},
{"ROCK6", 89},
{"ROCK7", 90},
{"SAM", 91},
{"SAMMAKE", 92},
{"SBAG", 93},
{"SILO", 94},
{"SILOMAKE", 95},
{"SPLIT2", 96},
{"SPLIT3", 97},
{"STEG", 98},
{"STNK", 99},
{"T01", 100},
{"T02", 101},
{"T03", 102},
{"T04", 103},
{"T05", 104},
{"T06", 105},
{"T07", 106},
{"T08", 107},
{"T09", 108},
{"T10", 109},
{"T11", 110},
{"T12", 111},
{"T13", 112},
{"T14", 113},
{"T15", 114},
{"T16", 115},
{"T17", 116},
{"T18", 117},
{"TC01", 118},
{"TC02", 119},
{"TC03", 120},
{"TC04", 121},
{"TC05", 122},
{"TMPL", 123},
{"TMPLMAKE", 124},
{"TRAN", 125},
{"TREX", 126},
{"TRIC", 127},
{"TRUK", 128},
{"V01", 129},
{"V02", 130},
{"V03", 131},
{"V04", 132},
{"V05", 133},
{"V06", 134},
{"V07", 135},
{"V08", 136},
{"V09", 137},
{"V10", 138},
{"V11", 139},
{"V19", 140},
{"V20", 141},
{"V21", 142},
{"V22", 143},
{"V23", 144},
{"V24", 145},
{"V25", 146},
{"V26", 147},
{"V27", 148},
{"V28", 149},
{"V29", 150},
{"V30", 151},
{"V31", 152},
{"V32", 153},
{"V33", 154},
{"V34", 155},
{"V35", 156},
{"V36", 157},
{"V37", 158},
{"VICE", 159},
{"WEAP", 160},
{"WEAP2", 161},
{"WEAPMAKE", 162},
{"WOOD", 163},
{ "WCRATE", 164 },
{ "SCRATE", 165 },
};


const float cost_lookup_table[] = { 0.0f, 0.0f, 2000.0f, 2000.0f, 700.0f, 0.0f, 450.0f, 1000.0f, 1000.0f, 0.0f, 0.0f, 300.0f, 500.0f, 0.0f, 0.0f, 0.0f, 100.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 75.0f, 0.0f, 100.0f, 160.0f, 300.0f, 200.0f, 300.0f, 500.0f, 2800.0f, 2800.0f, 6000.0f, 6000.0f, 1200.0f, 1200.0f, 800.0f, 500.0f, 500.0f, 600.0f, 600.0f, 300.0f, 300.0f, 1400.0f, 1200.0f, 0.0f, 0.0f, 1500.0f, 1500.0f, 1000.0f, 1000.0f, 1500.0f, 400.0f, 0.0f, 600.0f, 5000.0f, 0.0f, 0.0f, 750.0f, 0.0f, 800.0f, 800.0f, 700.0f, 700.0f, 300.0f, 300.0f, 1500.0f, 1500.0f, 1200.0f, 0.0f, 0.0f, 2000.0f, 2000.0f, 300.0f, 300.0f, 0.0f, 1000.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 750.0f, 750.0f, 50.0f, 150.0f, 150.0f, 0.0f, 0.0f, 0.0f, 900.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 3000.0f, 3000.0f, 1500.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 2000.0f, 0.0f, 2000.0f, 0.0f };


std::int32_t HouseColorMap[] = {
    0, 2, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
    0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};

std::int32_t ConvertMask(const unsigned int per_house_mask)
{
    std::int32_t per_color_mask = 0;
    for (int i = 4; i < 10; ++i) // HOUSE_MULTI1 ... HOUSE_MULTI6
    {
        if (per_house_mask & (1 << i))
            per_color_mask |= 1 << HouseColorMap[i];
    }
    return per_color_mask;
}
